/**
  * Created by shinya on 2016/01/17.
  */

import java.io.Serializable

import org.atilika.kuromoji.Tokenizer
import org.atilika.kuromoji.Token

sealed trait SFCompare
case class SFPOFPair(sf:String,pofs:List[String]) extends SFCompare

object Main extends App {

  // type SFPOFPair = SFPOFPair

  // val tokenizer = Tokenizer.builder.mode(Tokenizer.Mode.NORMAL).build
  // val tokens = tokenizer.tokenize("僕の夢は、不労収入を得て一生遊んで暮らすことです。").toArray
  val str:String ="僕の夢は、不労収入を得て一生遊んで暮らすことです。"
  generateTokenList(str).foreach(t => println(t.sf+t.pofs.foreach( f => println(f))))

  /*  tokens.foreach { t =>
      val token = t.asInstanceOf[Token]
      println(s"${token.getSurfaceForm} - ${token.getAllFeatures}")
      // println(s"${token.getSurfaceForm} - ${token.getAllFeatures}")
      System.out.println("allFeatures : " + token.getAllFeatures());
      System.out.println("partOfSpeech : " + token.getPartOfSpeech());
      System.out.println("position : " + token.getPosition());
      System.out.println("reading : " + token.getReading());
      System.out.println("surfaceFrom : " + token.getSurfaceForm());
      // System.out.println("allFeaturesArray : " + Arrays.asList(token.getAllFeaturesArray()));
      System.out.println("辞書にある言葉? : " + token.isKnown());
      System.out.println("未知語? : " + token.isUnknown());
      System.out.println("ユーザ定義? : " + token.isUser());
  } */

  def generateTokenList(s:String):List[SFPOFPair] = {
    val tokenizer = Tokenizer.builder.mode(Tokenizer.Mode.NORMAL).build
    val tokens = tokenizer.tokenize(s).toArray
    var tokensList: List[SFPOFPair] = List()
    tokens.foreach { t =>
      val token = t.asInstanceOf[Token]
      val sfpofs:SFPOFPair = SFPOFPair(token.getSurfaceForm(),token.getPartOfSpeech().split(",").toList.filter(_ != "*"))
      println("bbb "+sfpofs.sf+" ")
      sfpofs.pofs.foreach(t => println(t+" "))
      tokensList = sfpofs::tokensList
    }
    println("-----------------")
    tokensList
  }
  def recuAnalyzeToken(tokens:Array):List[SFPOFPair] {
    tokens match {

  }
  }
}
